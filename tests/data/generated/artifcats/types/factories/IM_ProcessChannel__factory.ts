/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  IM_ProcessChannel,
  IM_ProcessChannelInterface,
} from "../IM_ProcessChannel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "_participants",
        type: "address[5]",
      },
      {
        internalType: "uint256",
        name: "_disputeWindowInUNIX",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cond",
        type: "uint256",
      },
    ],
    name: "continueAfterDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeMadeAtUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeWindowInUNIX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "caseID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "from",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taskID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newTokenState",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "conditionState",
            type: "uint256",
          },
          {
            internalType: "bytes[5]",
            name: "signatures",
            type: "bytes[5]",
          },
        ],
        internalType: "struct IM_ProcessChannel.Step",
        name: "_step",
        type: "tuple",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526001600055600060015560006002553480156200002057600080fd5b5060405162000c3938038062000c39833981016040819052620000439162000104565b6200005260038360056200005d565b506080525062000197565b8260058101928215620000a8579160200282015b82811115620000a857825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000071565b50620000b6929150620000ba565b5090565b5b80821115620000b65760008155600101620000bb565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620000ff57600080fd5b919050565b60008060c083850312156200011857600080fd5b83601f8401126200012857600080fd5b60405160a081016001600160401b03811182821017156200014d576200014d620000d1565b6040528060a08501868111156200016357600080fd5b855b8181101562000188576200017981620000e7565b83526020928301920162000165565b50519196919550909350505050565b608051610a79620001c06000396000818160dc0152818161016e01526101dd0152610a796000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80631311163c146100725780632986c0e5146100875780633594b762146100a357806335c1d349146100ac578063421f9e34146100d7578063b08bb56a146100fe578063e90dd9e214610111575b600080fd5b6100856100803660046108ea565b61011a565b005b61009060015481565b6040519081526020015b60405180910390f35b61009060025481565b6100bf6100ba36600461092c565b6101aa565b6040516001600160a01b03909116815260200161009a565b6100907f000000000000000000000000000000000000000000000000000000000000000081565b61008561010c366004610945565b6101ca565b61009060005481565b600254813515801561012a575080155b1561013757426002555050565b610140826104fa565b156101a657806101685760808201351561015957426002555b50803560015560800135600055565b426101937f00000000000000000000000000000000000000000000000000000000000000008361097d565b106101a657813560015560808201356000555b5050565b600381600581106101ba57600080fd5b01546001600160a01b0316905081565b60025480158015906102045750426102027f00000000000000000000000000000000000000000000000000000000000000008361097d565b105b61024a5760405162461bcd60e51b81526020600482015260126024820152714e6f20656c6170736564206469737075746560701b60448201526064015b60405180910390fd5b6000548315801561025e5750806001166001145b801561027757506003600001546001600160a01b031633145b156102885760011916600217610475565b83600114801561029b5750806002166002145b80156102b457506003600101546001600160a01b031633145b156102c55760021916600417610475565b8360021480156102d85750806008166008145b80156102f157506003600101546001600160a01b031633145b156102ff5760081916610475565b8360031480156103125750806004166004145b801561032b57506003600101546001600160a01b031633145b1561033c5760041916601017610475565b83600414801561034f5750806020166020145b801561036857506003600201546001600160a01b031633145b156103795760201916600817610475565b83600514801561038c5750806010166010145b80156103a557506003600201546001600160a01b031633145b156103b65760101916604017610475565b8360061480156103c95750806040166040145b80156103e1575060038001546001600160a01b031633145b156103f25760401916608017610475565b8360071480156104055750806080166080145b801561041e57506003600401546001600160a01b031633145b15610430576080191661010017610475565b83600814801561044557508061010016610100145b801561045d575060038001546001600160a01b031633145b1561046f576101001916602017610475565b50505050565b5b80156104f2578260011660011480156104925750806010166010145b156104a35760101916602017610476565b8260021660021480156104b95750806040166040145b156104cb576040191661010017610476565b8260041660041480156104e15750806004166004145b156104f25760041916600817610476565b600055505050565b600081600001356001541061051157506000919050565b604080518335602082810191909152840135818301529083013560608281019190915283013560808281019190915283013560a08281019190915283013560c082015260009060e00160405160208183030381529060405280519060200120905060005b600581101561063d576003816005811061059157610591610995565b01546001600160a01b03166106136105ac60c08701876109ab565b83600581106105bd576105bd610995565b6020028101906105cd91906109cb565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061060d92508791506106479050565b9061067a565b6001600160a01b03161461062b575060009392505050565b8061063581610a12565b915050610575565b5060019392505050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b6000806000610689858561069e565b91509150610696816106e4565b509392505050565b6000808251604114156106d55760208301516040840151606085015160001a6106c987828585610830565b945094505050506106dd565b506000905060025b9250929050565b60008160048111156106f8576106f8610a2d565b14156107015750565b600181600481111561071557610715610a2d565b141561075e5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610241565b600281600481111561077257610772610a2d565b14156107c05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610241565b60038160048111156107d4576107d4610a2d565b141561082d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610241565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561085d57506000905060036108e1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156108b1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108da576000600192509250506108e1565b9150600090505b94509492505050565b6000602082840312156108fc57600080fd5b813567ffffffffffffffff81111561091357600080fd5b820160e0818503121561092557600080fd5b9392505050565b60006020828403121561093e57600080fd5b5035919050565b6000806040838503121561095857600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b6000821982111561099057610990610967565b500190565b634e487b7160e01b600052603260045260246000fd5b60008235609e198336030181126109c157600080fd5b9190910192915050565b6000808335601e198436030181126109e257600080fd5b83018035915067ffffffffffffffff8211156109fd57600080fd5b6020019150368190038213156106dd57600080fd5b6000600019821415610a2657610a26610967565b5060010190565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209459b777c7971a3e80d902cbeed5993ee38edde5e095d4569916e3c3e8c45a6564736f6c63430008090033";

type IM_ProcessChannelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IM_ProcessChannelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IM_ProcessChannel__factory extends ContractFactory {
  constructor(...args: IM_ProcessChannelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IM_ProcessChannel> {
    return super.deploy(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    ) as Promise<IM_ProcessChannel>;
  }
  override getDeployTransaction(
    _participants: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ],
    _disputeWindowInUNIX: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participants,
      _disputeWindowInUNIX,
      overrides || {}
    );
  }
  override attach(address: string): IM_ProcessChannel {
    return super.attach(address) as IM_ProcessChannel;
  }
  override connect(signer: Signer): IM_ProcessChannel__factory {
    return super.connect(signer) as IM_ProcessChannel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IM_ProcessChannelInterface {
    return new utils.Interface(_abi) as IM_ProcessChannelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IM_ProcessChannel {
    return new Contract(address, _abi, signerOrProvider) as IM_ProcessChannel;
  }
}
